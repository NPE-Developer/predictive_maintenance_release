{"version":3,"file":"static/js/528.a25d5345.chunk.js","mappings":"4OAUA,MAAMA,GAA4BC,EAAAA,EAAAA,MAAK,IAAM,+BACvCC,GAA6BD,EAAAA,EAAAA,MAAK,IAAM,+BACxCE,GAAgCF,EAAAA,EAAAA,MAAK,IAAM,gEAC3CG,GAA8BH,EAAAA,EAAAA,MAAK,IAAM,gEACzCI,GAA4BJ,EAAAA,EAAAA,MAAK,IAAM,gEACvCK,GAA6BL,EAAAA,EAAAA,MAAK,IAAM,gEACxCM,GAA8BN,EAAAA,EAAAA,MAAK,IAAM,gEAEhC,SAASO,IAAe,IAADC,EAElC,MAAMC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GACrBC,EAAiBH,EAAQI,QAKzBC,GAJqBL,EAAQM,mBACNN,EAAQO,qBACNP,EAAQQ,uBACdR,EAAQS,kBAChBC,EAAAA,EAAAA,OACXC,GAAWC,EAAAA,EAAAA,OAGX,QAAEC,EAAO,aAAEC,GAAiBH,EAASI,OAAS,CAAC,EAErDC,QAAQC,IAAIH,GAEZ,MAAMI,EAAoB,CACtB,CAAEC,GAAI,SAAUC,MAAO,aACU,OAAf,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBkB,WAAoB,CAAC,CAAEF,GAAI,kBAAmBC,MAAO,oBAAuB,MAC9D,OAAhB,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBmB,YAAqB,CAAC,CAAEH,GAAI,aAAcC,MAAO,eAAkB,MAC7C,OAAxB,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBoB,oBAA6B,CAAC,CAAEJ,GAAI,qBAAsBC,MAAO,uBAA0B,MACjF,OAAZ,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqB,QAAiB,CAAC,CAAEL,GAAI,SAAUC,MAAO,WAAc,MACrC,OAApB,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBsB,gBAAyB,CAAC,CAAEN,GAAI,iBAAkBC,MAAO,mBAAsB,MACnE,OAAd,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBuB,UAAmB,CAAC,CAAEP,GAAI,WAAYC,MAAO,aAAgB,IAG/EO,EAAeb,EACfI,EAAkBU,UAAUC,GAAQA,EAAKV,KAAOL,GAChD,GAECgB,EAAYC,IAAiBC,EAAAA,EAAAA,UAASL,GAAgB,EAAIA,EAAe,GAC1EM,EAAiBf,EAAkBgB,MAAMJ,EAAYA,EAAa,GAClEK,EAAeF,EAAeG,OAAS,EAAIH,EAAe,GAAGb,MAAQ,iBAIrEiB,EAAQ,MACV,MAAMA,EAAQC,aAAaC,QAAQ,SACnC,GAAa,MAATF,EACA,MAAO,CAAEG,WAAY,IAAIC,KAAQC,SAAU,IAAID,KAAQE,YAAY,GAChE,CACH,MAAMC,EAAOC,KAAKC,MAAMT,GACxB,MAAO,CACHG,WAAYI,EAAKJ,WACjBE,SAAUE,EAAKF,SACfC,WAAYC,EAAKD,WAEzB,CACH,EAZa,IAePI,EAAYC,IAAiBhB,EAAAA,EAAAA,UAAqB,CACrDQ,WAAYH,EAAMG,WAClBE,SAAUL,EAAMK,YAGbC,EAAYM,IAAiBjB,EAAAA,EAAAA,UAAkC,QAA1BjC,EAAUsC,EAAMM,kBAAU,IAAA5C,GAAAA,IAC/DmD,EAAcC,IAAmBnB,EAAAA,EAAAA,UAAS,GAa3CoB,EAA0BC,IAC5BL,EAAcK,IAiBlB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EAEtBF,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAAA,EAAOC,WAAWF,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAAA,EAAOE,eAAeH,SAAA,EAClCI,EAAAA,EAAAA,KAAA,OAAKL,UAAWE,EAAAA,EAAOI,YAAYL,UAC/BI,EAAAA,EAAAA,KAAA,UAAQL,UAAWE,EAAAA,EAAOK,WAAYC,QAASA,IAAM1D,GAAU,GAAGmD,UAC9DI,EAAAA,EAAAA,KAACI,EAAAA,IAAW,CAACC,KAAM,GAAIC,MAAO,CAAEC,MAAO,iCAG/CP,EAAAA,EAAAA,KAAA,OAAKL,UAAWE,EAAAA,EAAOW,aAAaZ,SAC/B3C,EAAQA,WAGbyC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAAA,EAAOY,WAAWb,SAAA,EAC9BI,EAAAA,EAAAA,KAAA,UAAQL,UAAWE,EAAAA,EAAOa,aAAcC,SAAU5B,EAAYoB,QArCvDS,KACvBrB,EAAiBsB,GAASA,EAAO,IAoCyEjB,UACtFI,EAAAA,EAAAA,KAACc,EAAAA,IAAY,OAGjBpB,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAAA,EAAOkB,WAAWnB,SAAA,EAC9BI,EAAAA,EAAAA,KAAA,SAAOgB,QAAQ,YAAWpB,SAAC,kBAC3BI,EAAAA,EAAAA,KAAA,SACIiB,KAAK,OACLC,OAAOC,EAAAA,EAAAA,IAAWhC,EAAWP,WAAY,cACzCwC,SAAWC,GACPjC,EAAeyB,IAAI,IACZA,EACHjC,WAAY,IAAIC,KAAKwC,EAAEC,OAAOJ,UAGtCvB,UAAWE,EAAAA,EAAO0B,UAClBZ,SAAU5B,EACVuB,MAAO,CACHkB,OAAQ,kBACRC,aAAc,MACdC,gBAAiB3C,EAAa,OAAS,QACvCwB,MAAO,mCAKnBb,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAAA,EAAOkB,WAAWnB,SAAA,EAC9BI,EAAAA,EAAAA,KAAA,SAAOgB,QAAQ,UAASpB,SAAC,gBACzBI,EAAAA,EAAAA,KAAA,SACIiB,KAAK,OACLC,OAAOC,EAAAA,EAAAA,IAAWhC,EAAWL,SAAU,cACvCsC,SAAWC,GACPjC,EAAeyB,IAAI,IACZA,EACH/B,SAAU,IAAID,KAAKwC,EAAEC,OAAOJ,UAGpCvB,UAAWE,EAAAA,EAAO0B,UAClBZ,SAAU5B,EACVuB,MAAO,CACHkB,OAAQ,kBACRC,aAAc,MACdC,gBAAiB3C,EAAa,OAAS,QACvCwB,MAAO,mCAKnBb,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAAA,EAAO8B,YAAY/B,SAAA,EAC/BI,EAAAA,EAAAA,KAAA,SAAOgB,QAAQ,WAAUpB,SAAC,cAC1BF,EAAAA,EAAAA,MAAA,SAAOC,UAAWE,EAAAA,EAAO+B,OAAOhC,SAAA,EAC5BI,EAAAA,EAAAA,KAAA,SACIiB,KAAK,WACL1D,GAAG,WACHsE,QAAS9C,EACTqC,SAhGXU,KACjBzC,EAAewB,IAAUA,OAiGDb,EAAAA,EAAAA,KAAA,QAAML,UAAWE,EAAAA,EAAOkC,sBAOxCrC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAAA,EAAOmC,aAAapC,SAAA,EAChCI,EAAAA,EAAAA,KAAA,UAAQG,QAxFL8B,KACX/D,EAAa,GACbC,EAAc+D,GAAaA,EAAY,IAsFFvB,SAAyB,IAAfzC,EAAiB0B,UACpDI,EAAAA,EAAAA,KAACmC,EAAAA,IAAc,OAEnBnC,EAAAA,EAAAA,KAAA,OAAAJ,SAAMrB,KACNyB,EAAAA,EAAAA,KAAA,UAAQG,QAlGLiC,KACXlE,EAAa,EAAIZ,EAAkBkB,QACnCL,EAAc+D,GAAaA,EAAY,IAgGFvB,SAAUzC,EAAa,GAAKZ,EAAkBkB,OAAOoB,UAC9EI,EAAAA,EAAAA,KAACqC,EAAAA,IAAiB,aAM9BrC,EAAAA,EAAAA,KAAA,OAAKL,UAAWE,EAAAA,EAAOyC,cAAc1C,SAChCvB,EAAekE,IAAItE,IAChByB,EAAAA,EAAAA,MAAA8C,EAAAA,SAAA,CAAA5C,SAAA,CACiB,WAAZ3B,EAAKV,KACFyC,EAAAA,EAAAA,KAACtE,EAAyB,CACtB+G,SAAU1D,EACV2D,QAASpD,EACTH,WAAYA,EACZwD,mBAAoBnD,IAIf,oBAAZvB,EAAKV,KACFyC,EAAAA,EAAAA,KAACpE,EAA0B,CACvB6G,SAAU1D,EACV2D,QAASpD,EACTH,WAAYA,EACZwD,mBAAoBnD,IAIf,eAAZvB,EAAKV,KACFyC,EAAAA,EAAAA,KAACnE,EAA6B,CAC1B4G,SAAU1D,EACV2D,QAASpD,EACTH,WAAYA,EACZwD,mBAAoBnD,IAIf,uBAAZvB,EAAKV,KACFyC,EAAAA,EAAAA,KAAClE,EAA2B,CACxB2G,SAAU1D,EACV2D,QAASpD,EACTH,WAAYA,EACZwD,mBAAoBnD,IAGf,WAAZvB,EAAKV,KACFyC,EAAAA,EAAAA,KAACjE,EAAyB,CACtB0G,SAAU1D,EACV2D,QAASpD,EACTH,WAAYA,EACZwD,mBAAoBnD,IAGf,mBAAZvB,EAAKV,KACFyC,EAAAA,EAAAA,KAAChE,EAA0B,CACvByG,SAAU1D,EACV2D,QAASpD,EACTH,WAAYA,EACZwD,mBAAoBnD,IAGf,aAAZvB,EAAKV,KACFyC,EAAAA,EAAAA,KAAC/D,EAA2B,CACxBwG,SAAU1D,EACV2D,QAASpD,EACTH,WAAYA,EACZwD,mBAAoBnD,YAQpD,C,kCCvQA,SAAgB,WAAa,oCAAoC,eAAiB,wCAAwC,YAAc,qCAAqC,aAAe,sCAAsC,WAAa,oCAAoC,WAAa,oCAAoC,WAAa,oCAAoC,YAAc,qCAAqC,OAAS,gCAAgC,OAAS,gCAAgC,aAAe,sCAAsC,aAAe,sCAAsC,cAAgB,uCAAuC,YAAc,qCAAqC,WAAa,oCAAoC,iBAAmB,0CAA0C,YAAc,qCAAqC,WAAa,oCAAoC,eAAiB,wCAAwC,eAAiB,wCAAwC,UAAY,mCAAmC,gBAAkB,yCAAyC,iBAAmB,0CAA0C,eAAiB,wCAAwC,gBAAkB,yCAAyC,WAAa,oCAAoC,UAAY,mCAAmC,sBAAwB,+CAA+C,eAAiB,wCAAwC,SAAW,kCAAkC,UAAY,mCAAmC,cAAgB,uCAAuC,YAAc,qCAAqC,gBAAkB,yCAAyC,WAAa,oCAAoC,eAAiB,wCAAwC,gBAAkB,yCAAyC,UAAY,mCAAmC,aAAe,sCAAsC,eAAiB,wCAAwC,iBAAmB,0CAA0C,kBAAoB,2CAA2C,aAAe,sCAAsC,cAAgB,uCAAuC,aAAe,sCAAsC,eAAiB,wCAAwC,YAAc,qCAAqC,aAAe,sCAAsC,cAAgB,uCAAuC,MAAQ,+BAA+B,gBAAkB,yCAAyC,oBAAsB,6CAA6C,kBAAoB,2CAA2C,aAAe,sCAAsC,iBAAmB,0CAA0C,YAAc,qCAAqC,OAAS,gC","sources":["features/Dashboard/DashboardLevel3/DashboardLevel3.tsx","webpack://nagamas_frontend/./src/features/Dashboard/DashboardLevel3/DashboardLevel3.module.css?0721"],"sourcesContent":["import styles from './DashboardLevel3.module.css'\nimport { FiArrowLeft } from 'react-icons/fi'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { lazy, useContext, useState } from 'react'\nimport AppContext from '../../../context'\nimport { formatDate } from 'date-fns'\nimport { TbRefreshDot } from 'react-icons/tb'\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io'\n\n// Export Page\nconst DashboardLevel3SensorPage = lazy(() => import('./DashboardLevel3Sensor'))\nconst DashboardLevel3FollErrPage = lazy(() => import('./DashboardLevel3FollErr'))\nconst DashboardLevel3CenterlinePage = lazy(() => import('./DashboardLevel3Centerline'))\nconst DashboardLevel3CriticalPage = lazy(() => import('./DashboardLevel3Critical'))\nconst DashboardLevel3SafetyPage = lazy(() => import('./DashboardLevel3Safety'))\nconst DashboardLevel3QualityPage = lazy(() => import('./DashboardLevel3Quality'))\nconst DashboardLevel3ElectricPage = lazy(() => import('./DashboardLevel3Electric'))\n\nexport default function DashboardV3() {\n    // ========================================= GLOBAL CONTEXT =========================================  //\n    const context = useContext(AppContext)\n    const contextVersion = context.version\n    const contextAccessToken = context.contextAccessToken\n    const contextShowAlertFunc = context.contextShowAlertFunc\n    const contextShowLoadingFunc = context.contextShowLoadingFunc\n    const stateShowLoading = context.stateShowLoading\n    const navigate = useNavigate()\n    const location = useLocation()\n    // ========================================= GLOBAL CONTEXT =========================================  //\n\n    const { link_up, section_type } = location.state || {}\n\n    console.log(section_type)\n\n    const allDashboardItems = [\n        { id: 'sensor', title: 'Sensor' },\n        ...(contextVersion?.following != null ? [{ id: 'following_error', title: 'Following Error' }] : []),\n        ...(contextVersion?.centerline != null ? [{ id: 'centerline', title: 'Centerline' }] : []),\n        ...(contextVersion?.critical_rod_break != null ? [{ id: 'critical_rod_break', title: 'Critical Rod Break' }] : []),\n        ...(contextVersion?.safety != null ? [{ id: 'safety', title: 'Safety' }] : []),\n        ...(contextVersion?.quality_factor != null ? [{ id: 'quality_factor', title: 'Quality Factor' }] : []),\n        ...(contextVersion?.electric != null ? [{ id: 'electric', title: 'Electric' }] : []),\n    ]\n\n    const initialIndex = section_type\n        ? allDashboardItems.findIndex(item => item.id === section_type)\n        : 0\n\n    const [startIndex, setStartIndex] = useState(initialIndex >= 0 ? initialIndex : 0)\n    const displayedItems = allDashboardItems.slice(startIndex, startIndex + 1)\n    const currentTitle = displayedItems.length > 0 ? displayedItems[0].title : 'Tidak ada item'\n\n    // ========================================= STATE VIEW =========================================  //\n\n    const cache = (() => {\n        const cache = localStorage.getItem(\"cache\")\n        if (cache == null) {\n            return { start_date: new Date(), end_date: new Date(), isRealtime: true }\n        } else {\n            const data = JSON.parse(cache)\n            return {\n                start_date: data.start_date,\n                end_date: data.end_date,\n                isRealtime: data.isRealtime,\n            }\n        }\n    })()\n\n    interface FilterType { start_date: Date; end_date: Date; }\n    const [filterDate, setFilterDate] = useState<FilterType>({\n        start_date: cache.start_date,\n        end_date: cache.end_date\n    })\n\n    const [isRealtime, setIsRealtime] = useState<boolean>(cache.isRealtime ?? true)\n    const [clickRefresh, setClickRefresh] = useState(0)\n    // ========================================= STATE VIEW =========================================  //\n\n\n    // ========================================= FUNCTIONS =========================================  //\n    const handleToggle = () => {\n        setIsRealtime((prev) => !prev)\n    }\n\n    const handleClickRefresh = () => {\n        setClickRefresh((prev) => prev + 1)\n    }\n\n    const handleFilterDateChange = (newFilter: FilterType) => {\n        setFilterDate(newFilter)\n    }\n\n    const handleNext = () => {\n        if (startIndex + 1 < allDashboardItems.length) {\n            setStartIndex(prevIndex => prevIndex + 1)\n        }\n    }\n\n    const handlePrev = () => {\n        if (startIndex > 0) {\n            setStartIndex(prevIndex => prevIndex - 1)\n        }\n    }\n    // ========================================= FUNCTIONS =========================================  //\n\n\n    return (\n        <div className='container'>\n            {/* Header */}\n            <div className={styles.cardHeader}>\n                <div className={styles.leftMidWrapper}>\n                    <div className={styles.leftSection}>\n                        <button className={styles.backButton} onClick={() => navigate(-1)}>\n                            <FiArrowLeft size={40} style={{ color: \"var(--secondary-color)\" }} />\n                        </button>\n                    </div>\n                    <div className={styles.leftSection2}>\n                        {link_up.link_up}\n                    </div>\n\n                    <div className={styles.midSection}>\n                        <button className={styles.buttonFooter} disabled={isRealtime} onClick={handleClickRefresh}>\n                            <TbRefreshDot />\n                        </button>\n\n                        <div className={styles.inputGroup}>\n                            <label htmlFor=\"startDate\">START DATE :</label>\n                            <input\n                                type=\"date\"\n                                value={formatDate(filterDate.start_date, \"yyyy-MM-dd\")}\n                                onChange={(e) =>\n                                    setFilterDate((prev) => ({\n                                        ...prev,\n                                        start_date: new Date(e.target.value),\n                                    }))\n                                }\n                                className={styles.dateInput}\n                                disabled={isRealtime}\n                                style={{\n                                    border: \"0px solid black\",\n                                    borderRadius: \"5px\",\n                                    backgroundColor: isRealtime ? \"#eee\" : \"white\",\n                                    color: \"var(--header-color-hover)\",\n                                }}\n                            />\n                        </div>\n\n                        <div className={styles.inputGroup}>\n                            <label htmlFor=\"endDate\">END DATE :</label>\n                            <input\n                                type=\"date\"\n                                value={formatDate(filterDate.end_date, \"yyyy-MM-dd\")}\n                                onChange={(e) =>\n                                    setFilterDate((prev) => ({\n                                        ...prev,\n                                        end_date: new Date(e.target.value),\n                                    }))\n                                }\n                                className={styles.dateInput}\n                                disabled={isRealtime}\n                                style={{\n                                    border: \"0px solid black\",\n                                    borderRadius: \"5px\",\n                                    backgroundColor: isRealtime ? \"#eee\" : \"white\",\n                                    color: \"var(--header-color-hover)\",\n                                }}\n                            />\n                        </div>\n\n                        <div className={styles.switchGroup}>\n                            <label htmlFor=\"realtime\">Realtime</label>\n                            <label className={styles.switch}>\n                                <input\n                                    type=\"checkbox\"\n                                    id=\"realtime\"\n                                    checked={isRealtime}\n                                    onChange={handleToggle}\n                                />\n                                <span className={styles.slider}></span>\n                            </label>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className={styles.rightSection}>\n                    <button onClick={handlePrev} disabled={startIndex === 0}>\n                        <IoIosArrowBack />\n                    </button>\n                    <div>{currentTitle}</div>\n                    <button onClick={handleNext} disabled={startIndex + 1 >= allDashboardItems.length}>\n                        <IoIosArrowForward />\n                    </button>\n                </div>\n            </div>\n\n            {/* Body */}\n            <div className={styles.cardContainer} >\n                {displayedItems.map(item => (\n                    <>\n                        {item.id === 'sensor' && (\n                            <DashboardLevel3SensorPage\n                                realtime={isRealtime}\n                                refresh={clickRefresh}\n                                filterDate={filterDate}\n                                onFilterDateChange={handleFilterDateChange}\n                            />\n                        )}\n\n                        {item.id === 'following_error' && (\n                            <DashboardLevel3FollErrPage\n                                realtime={isRealtime}\n                                refresh={clickRefresh}\n                                filterDate={filterDate}\n                                onFilterDateChange={handleFilterDateChange}\n                            />\n                        )}\n\n                        {item.id === 'centerline' && (\n                            <DashboardLevel3CenterlinePage\n                                realtime={isRealtime}\n                                refresh={clickRefresh}\n                                filterDate={filterDate}\n                                onFilterDateChange={handleFilterDateChange}\n                            />\n                        )}\n\n                        {item.id === 'critical_rod_break' && (\n                            <DashboardLevel3CriticalPage\n                                realtime={isRealtime}\n                                refresh={clickRefresh}\n                                filterDate={filterDate}\n                                onFilterDateChange={handleFilterDateChange}\n                            />\n                        )}\n                        {item.id === 'safety' && (\n                            <DashboardLevel3SafetyPage\n                                realtime={isRealtime}\n                                refresh={clickRefresh}\n                                filterDate={filterDate}\n                                onFilterDateChange={handleFilterDateChange}\n                            />\n                        )}\n                        {item.id === 'quality_factor' && (\n                            <DashboardLevel3QualityPage\n                                realtime={isRealtime}\n                                refresh={clickRefresh}\n                                filterDate={filterDate}\n                                onFilterDateChange={handleFilterDateChange}\n                            />\n                        )}\n                        {item.id === 'electric' && (\n                            <DashboardLevel3ElectricPage\n                                realtime={isRealtime}\n                                refresh={clickRefresh}\n                                filterDate={filterDate}\n                                onFilterDateChange={handleFilterDateChange}\n                            />\n                        )}\n                    </>\n                ))}\n            </div>\n        </div >\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"cardHeader\":\"DashboardLevel3_cardHeader__MXDst\",\"leftMidWrapper\":\"DashboardLevel3_leftMidWrapper__qMH7C\",\"leftSection\":\"DashboardLevel3_leftSection__CVA+a\",\"leftSection2\":\"DashboardLevel3_leftSection2__9O5NJ\",\"midSection\":\"DashboardLevel3_midSection__S8Rar\",\"backButton\":\"DashboardLevel3_backButton__i6s+e\",\"inputGroup\":\"DashboardLevel3_inputGroup__5ZGNw\",\"switchGroup\":\"DashboardLevel3_switchGroup__0osF1\",\"switch\":\"DashboardLevel3_switch__H5vxs\",\"slider\":\"DashboardLevel3_slider__MRW4q\",\"buttonFooter\":\"DashboardLevel3_buttonFooter__GcCV8\",\"rightSection\":\"DashboardLevel3_rightSection__5554v\",\"cardContainer\":\"DashboardLevel3_cardContainer__cqHxT\",\"cardWrapper\":\"DashboardLevel3_cardWrapper__enaBR\",\"cardParent\":\"DashboardLevel3_cardParent__Yv8tQ\",\"cardParentHeader\":\"DashboardLevel3_cardParentHeader__9wgqw\",\"titleHeader\":\"DashboardLevel3_titleHeader__znZH0\",\"bodyHeader\":\"DashboardLevel3_bodyHeader__KNQfH\",\"bodyHeaderLeft\":\"DashboardLevel3_bodyHeaderLeft__aNuXs\",\"itemHeaderLeft\":\"DashboardLevel3_itemHeaderLeft__6zTO2\",\"oolNumber\":\"DashboardLevel3_oolNumber__XDgtb\",\"cenNumberNormal\":\"DashboardLevel3_cenNumberNormal__yYhPq\",\"cenNumberWarning\":\"DashboardLevel3_cenNumberWarning__vK7Pa\",\"cenNumberAlarm\":\"DashboardLevel3_cenNumberAlarm__KX5tl\",\"bodyHeaderRight\":\"DashboardLevel3_bodyHeaderRight__ac1a+\",\"imgWrapper\":\"DashboardLevel3_imgWrapper__MN+gt\",\"imgHeader\":\"DashboardLevel3_imgHeader__ysqC+\",\"cardParentBodyWrapper\":\"DashboardLevel3_cardParentBodyWrapper__hCBhH\",\"cardParentBody\":\"DashboardLevel3_cardParentBody__NtWMo\",\"gridItem\":\"DashboardLevel3_gridItem__eRolH\",\"gridTitle\":\"DashboardLevel3_gridTitle__u3QTx\",\"gridTitleText\":\"DashboardLevel3_gridTitleText__pcXwD\",\"gridContent\":\"DashboardLevel3_gridContent__nYujx\",\"gridContentText\":\"DashboardLevel3_gridContentText__6DD2h\",\"gridFooter\":\"DashboardLevel3_gridFooter__8Fc2P\",\"gridFooterItem\":\"DashboardLevel3_gridFooterItem__K9tw2\",\"footerIndicator\":\"DashboardLevel3_footerIndicator__QljpW\",\"connected\":\"DashboardLevel3_connected__i8Kam\",\"disconnected\":\"DashboardLevel3_disconnected__t1riH\",\"gridItemCenter\":\"DashboardLevel3_gridItemCenter__Iw7Um\",\"gridCenterHeader\":\"DashboardLevel3_gridCenterHeader__1OPvN\",\"gridCenterContent\":\"DashboardLevel3_gridCenterContent__kDuRA\",\"warningAlarm\":\"DashboardLevel3_warningAlarm__-E15e\",\"alarmColorBox\":\"DashboardLevel3_alarmColorBox__+6hjZ\",\"warnColorBox\":\"DashboardLevel3_warnColorBox__15X8I\",\"booleanContent\":\"DashboardLevel3_booleanContent__szuH4\",\"booleanLeft\":\"DashboardLevel3_booleanLeft__ieTYw\",\"booleanRight\":\"DashboardLevel3_booleanRight__bMnQm\",\"booleanStatus\":\"DashboardLevel3_booleanStatus__I-pQj\",\"notOk\":\"DashboardLevel3_notOk__++RDs\",\"gridContentFoll\":\"DashboardLevel3_gridContentFoll__-1Ftq\",\"gridContentTextFoll\":\"DashboardLevel3_gridContentTextFoll__VERX4\",\"warningBackground\":\"DashboardLevel3_warningBackground__DRDb9\",\"blinkWarning\":\"DashboardLevel3_blinkWarning__EPBLd\",\"dangerBackground\":\"DashboardLevel3_dangerBackground__gUGUW\",\"blinkDanger\":\"DashboardLevel3_blinkDanger__cVZgs\",\"noData\":\"DashboardLevel3_noData__aH30S\"};"],"names":["DashboardLevel3SensorPage","lazy","DashboardLevel3FollErrPage","DashboardLevel3CenterlinePage","DashboardLevel3CriticalPage","DashboardLevel3SafetyPage","DashboardLevel3QualityPage","DashboardLevel3ElectricPage","DashboardV3","_cache$isRealtime","context","useContext","AppContext","contextVersion","version","navigate","contextAccessToken","contextShowAlertFunc","contextShowLoadingFunc","stateShowLoading","useNavigate","location","useLocation","link_up","section_type","state","console","log","allDashboardItems","id","title","following","centerline","critical_rod_break","safety","quality_factor","electric","initialIndex","findIndex","item","startIndex","setStartIndex","useState","displayedItems","slice","currentTitle","length","cache","localStorage","getItem","start_date","Date","end_date","isRealtime","data","JSON","parse","filterDate","setFilterDate","setIsRealtime","clickRefresh","setClickRefresh","handleFilterDateChange","newFilter","_jsxs","className","children","styles","cardHeader","leftMidWrapper","_jsx","leftSection","backButton","onClick","FiArrowLeft","size","style","color","leftSection2","midSection","buttonFooter","disabled","handleClickRefresh","prev","TbRefreshDot","inputGroup","htmlFor","type","value","formatDate","onChange","e","target","dateInput","border","borderRadius","backgroundColor","switchGroup","switch","checked","handleToggle","slider","rightSection","handlePrev","prevIndex","IoIosArrowBack","handleNext","IoIosArrowForward","cardContainer","map","_Fragment","realtime","refresh","onFilterDateChange"],"sourceRoot":""}