{"version":3,"file":"static/js/665.64d8e5af.chunk.js","mappings":"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","sources":["webpack://nagamas_frontend/./src/layouts/Login/Login.module.css?b56a","layouts/Login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"animation\":\"Login_animation__ER-CO\",\"formLogin\":\"Login_formLogin__96NjA\",\"inputBox\":\"Login_inputBox__vn3tI\",\"buttonLogin\":\"Login_buttonLogin__bGgbG\",\"animate\":\"Login_animate__Fj52n\",\"backdroplogin\":\"Login_backdroplogin__5iX1U\"};","import classes from \"./Login.module.css\"\nimport { useState, useEffect, useRef, useContext } from \"react\"\nimport logo from \"../../assets/images/logo.png\"\nimport AppContext from \"../../context\"\nimport { AlertEntity } from \"../Alert/AlertEntity\"\nimport { UserContextEntity } from \"../../entities/UserEntity\"\nimport { AuthService } from \"../../services/auth\"\n\nconst Login = (props: { showLogin: boolean; setShowLogin: (val: boolean) => void; setUserEntity: (val: UserContextEntity) => void }) => {\n    const {\n        showLogin,\n        setShowLogin,\n        setUserEntity,\n    } = props\n\n    const [username, setUsername] = useState<string>(\"\")\n    const [password, setPassword] = useState<string>(\"\")\n    const firstInputRef = useRef<HTMLInputElement | null>(null)\n\n    useEffect(() => {\n        if (firstInputRef.current != null) {\n            firstInputRef.current.focus()\n        }\n    }, [])\n\n    const appContext = useContext(AppContext)\n    const contextShowAlertFunc = appContext.contextShowAlertFunc\n    const contextShowLoadingFunc = appContext.contextShowLoadingFunc\n\n    async function clickOK() {\n        contextShowLoadingFunc(true)\n        try {\n            const result = await AuthService.login(username, password)\n            setUserEntity(result)\n            setShowLogin(false)\n        } catch (error: any) {\n            return contextShowAlertFunc(new AlertEntity({ message: error.message, level: 3 }))\n        } finally {\n            contextShowLoadingFunc(false)\n        }\n    }\n\n    const handleInputFocus = () => {\n        setTimeout(() => {\n            firstInputRef.current?.scrollIntoView({ behavior: 'smooth', block: 'center' })\n        }, 300)\n    }\n\n    const handleBackdropClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (event.target === event.currentTarget) {\n            setShowLogin(false)\n        }\n    }\n\n    return (\n        <>\n            {showLogin && (\n                <>\n                    <div className={classes.backdroplogin} onClick={handleBackdropClick}>\n                        <div className={classes.animation}>\n                            <div className={classes.formLogin}>\n                                <h3>LOGIN</h3>\n                                <div\n                                    style={{\n                                        width: \"100%\",\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                    }}\n                                >\n                                    <img alt=\"logo-aop\" src={logo} style={{ width: \"50%\" }} />\n                                </div>\n\n                                <p>Enter Your Username & Password</p>\n                                <div style={{ marginBottom: 'min(12px, 2vh)' }}></div>\n                                <div className={classes.inputBox}>\n                                    <input\n                                        ref={firstInputRef}\n                                        name=\"LoginUsername\"\n                                        value={username}\n                                        onFocus={handleInputFocus}\n                                        onChange={(event) => {\n                                            setUsername(event.target.value)\n                                        }}\n                                        required={true}\n                                        autoComplete=\"false\"\n                                        onKeyDown={(event) => {\n                                            if (event.key === 'Enter') {\n                                                clickOK()\n                                            }\n                                        }}\n                                    />\n                                    <span>Username</span>\n                                    <i></i>\n                                </div>\n                                <div style={{ marginBottom: 'min(12px, 2vh)' }}></div>\n                                <div className={classes.inputBox}>\n                                    <input\n                                        name={`LoginPassword_${Math.random()}`}\n                                        value={password}\n                                        onFocus={handleInputFocus}\n                                        onChange={(event) => {\n                                            setPassword(event.target.value)\n                                        }}\n                                        type=\"password\"\n                                        required={true}\n                                        autoComplete=\"false\"\n                                        onKeyDown={(event) => {\n                                            if (event.key === 'Enter') {\n                                                clickOK()\n                                            }\n                                        }}\n                                    />\n                                    <span>Password</span>\n                                    <i></i>\n                                </div>\n                                <div style={{ marginBottom: 'min(12px, 2vh)' }}></div>\n                                <button className={classes.buttonLogin} onClick={clickOK}>\n                                    <span>Login</span>\n                                </button>\n                                <div></div>\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )}\n        </>\n    )\n}\nexport default Login"],"names":["props","showLogin","setShowLogin","setUserEntity","username","setUsername","useState","password","setPassword","firstInputRef","useRef","useEffect","current","focus","appContext","useContext","AppContext","contextShowAlertFunc","contextShowLoadingFunc","async","clickOK","result","AuthService","login","error","AlertEntity","message","level","handleInputFocus","setTimeout","_firstInputRef$curren","scrollIntoView","behavior","block","_jsx","_Fragment","children","className","classes","onClick","event","target","currentTarget","_jsxs","style","width","display","justifyContent","alt","src","logo","marginBottom","ref","name","value","onFocus","onChange","required","autoComplete","onKeyDown","key","Math","random","type"],"sourceRoot":""}