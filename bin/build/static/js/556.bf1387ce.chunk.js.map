{"version":3,"file":"static/js/556.bf1387ce.chunk.js","mappings":"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","sources":["webpack://nagamas_frontend/./src/components/Popup/Popup.module.css?2863","webpack://nagamas_frontend/./src/features/SensorConfig/SensorConfig.module.css?e116","services/sensor_config.ts","features/SensorConfig/SensorConfig.tsx","services/machine.ts","components/Popup/PopupPilihEntity.ts","utils/filter-utils.ts","components/Popup/PopupPilih.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Popup_box__L6ukI\",\"modalPilih\":\"Popup_modalPilih__A4Edx\",\"slideIn\":\"Popup_slideIn__CW6qc\",\"containerfilter\":\"Popup_containerfilter__OBopv\",\"modalConfirm\":\"Popup_modalConfirm__D-kYn\",\"tabView\":\"Popup_tabView__GpztR\",\"modalKeyboardNumeric\":\"Popup_modalKeyboardNumeric__9bmMr\",\"modalKeyboard\":\"Popup_modalKeyboard__0ECMp\",\"buttonKey\":\"Popup_buttonKey__4FEI6\",\"modalTable\":\"Popup_modalTable__S-lni\",\"modal\":\"Popup_modal__oHjOC\",\"modaldetail\":\"Popup_modaldetail__uqSWM\",\"buttons\":\"Popup_buttons__6SigF\",\"input\":\"Popup_input__l3MOR\",\"title\":\"Popup_title__53Wuz\",\"modalpilih\":\"Popup_modalpilih__V8Sgk\",\"form\":\"Popup_form__8bjUk\",\"containerkey\":\"Popup_containerkey__xsPEg\",\"modalmobile\":\"Popup_modalmobile__kvm78\",\"hide\":\"Popup_hide__ieQY9\",\"close\":\"Popup_close__eT9CH\",\"frame\":\"Popup_frame__v0jqt\"};","// extracted by mini-css-extract-plugin\nexport default {\"conWrapper\":\"SensorConfig_conWrapper__LD+Ps\",\"conItem\":\"SensorConfig_conItem__Y7g5R\",\"conHeader\":\"SensorConfig_conHeader__sD4l7\",\"conBody\":\"SensorConfig_conBody__nMyRY\",\"bodyWrapper\":\"SensorConfig_bodyWrapper__TGkru\",\"bodyLeft\":\"SensorConfig_bodyLeft__qvan7\",\"bodyLeftHeader\":\"SensorConfig_bodyLeftHeader__VbwNz\",\"headerItem\":\"SensorConfig_headerItem__qZww4\",\"headerDot\":\"SensorConfig_headerDot__t7Pt5\",\"headerDisconnect\":\"SensorConfig_headerDisconnect__vubHC\",\"headerConnect\":\"SensorConfig_headerConnect__rGgVY\",\"bodyLeftBody\":\"SensorConfig_bodyLeftBody__RRbCw\",\"bodyLeftBodyCard\":\"SensorConfig_bodyLeftBodyCard__lHOFp\",\"deviceImageWrapper\":\"SensorConfig_deviceImageWrapper__py01e\",\"deviceImage\":\"SensorConfig_deviceImage__FkD+4\",\"deviceInfo\":\"SensorConfig_deviceInfo__hPrNJ\",\"label\":\"SensorConfig_label__GpcS6\",\"inputedit\":\"SensorConfig_inputedit__PYWpa\",\"infoRow\":\"SensorConfig_infoRow__LIVBO\",\"infoLabel\":\"SensorConfig_infoLabel__aG4tR\",\"infoValue\":\"SensorConfig_infoValue__TXh01\",\"bodyLeftFooter\":\"SensorConfig_bodyLeftFooter__-ZZlh\",\"bodyLeftFooterButton\":\"SensorConfig_bodyLeftFooterButton__0rqP-\",\"bodyRight\":\"SensorConfig_bodyRight__8sxNP\",\"bodyRightForm\":\"SensorConfig_bodyRightForm__3LVyH\",\"formLeft\":\"SensorConfig_formLeft__QMe5f\",\"formMid\":\"SensorConfig_formMid__baM06\",\"formRight\":\"SensorConfig_formRight__njmAE\",\"bodyRightButton\":\"SensorConfig_bodyRightButton__x9aI8\",\"pageButton\":\"SensorConfig_pageButton__wnMdI\",\"tooltipText\":\"SensorConfig_tooltipText__n7WaM\",\"active\":\"SensorConfig_active__on1ny\",\"pageIndicator\":\"SensorConfig_pageIndicator__eMZld\",\"pageIndicatorWrapper\":\"SensorConfig_pageIndicatorWrapper__zxHvl\",\"rotate\":\"SensorConfig_rotate__pWG5d\",\"rightButton\":\"SensorConfig_rightButton__L4dAS\",\"bodyRightStatus\":\"SensorConfig_bodyRightStatus__L6rAj\",\"bodyRightStatusLeft\":\"SensorConfig_bodyRightStatusLeft__s+5tr\",\"bodyRightStatusRight\":\"SensorConfig_bodyRightStatusRight__LAw4S\",\"saveButton\":\"SensorConfig_saveButton__mIOuQ\",\"paramItem\":\"SensorConfig_paramItem__a0i3x\",\"statusDot\":\"SensorConfig_statusDot__-ECU7\",\"statusEditable\":\"SensorConfig_statusEditable__dLVkb\",\"statusRead\":\"SensorConfig_statusRead__04AZG\"};","import { BASE_URL } from \"../constants\"\nimport { SensorConfigEntity, FormSensorConfigEntity, SensorConfigRealtime } from \"../entities/SensorConfigEntity\"\nimport FetchUtils from \"../utils/fetch\"\n\nclass SensorConfigService {\n    static async GetSensorConfigByMachineID(machine_id: number): Promise<SensorConfigEntity> {\n        let resp = await FetchUtils.fetchAuth(`${BASE_URL}/api/v1/machine/config?machine_id=${machine_id}`)\n\n        if (resp.status !== 200) {\n            throw new Error(resp.message)\n        }\n\n        const data: SensorConfigEntity = {\n            machine_id: resp.data.machine_id,\n            pressure_max_warn: resp.data.pressure_max_warn,\n            pressure_max_alarm: resp.data.pressure_max_alarm,\n            pressure_min_warn: resp.data.pressure_min_warn,\n            pressure_min_alarm: resp.data.pressure_min_alarm,\n            x_warn: resp.data.x_warn,\n            x_alarm: resp.data.x_alarm,\n            x_acc_warn: resp.data.x_acc_warn,\n            x_acc_alarm: resp.data.x_acc_alarm,\n            z_warn: resp.data.z_warn,\n            z_alarm: resp.data.z_alarm,\n            z_acc_warn: resp.data.z_acc_warn,\n            z_acc_alarm: resp.data.z_acc_alarm,\n            temp_warn: resp.data.temp_warn,\n            temp_alarm: resp.data.temp_alarm,\n        }\n\n        return data\n    }\n\n    static async AddSensorConfig(machine_id: number, fields: FormSensorConfigEntity): Promise<{ message: string }> {\n        let resp = await FetchUtils.fetchAuth(`${BASE_URL}/api/v1/machine/config`, {\n            method: 'POST',\n            body: JSON.stringify({ machine_id, fields }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n\n        if (resp.status !== 200) {\n            throw new Error(resp.message)\n        }\n\n        return resp\n    }\n\n    static async GetSensorConfigRealtime(machine_id: number,): Promise<SensorConfigRealtime[]> {\n        const resp = await FetchUtils.fetchAuth(`${BASE_URL}/api/v1/machine/config/realtime?machine_id=${encodeURIComponent(machine_id)}`)\n\n        if (resp.status !== 200) {\n            throw new Error(\"Failed to fetch sensor config realtime data.\")\n        }\n\n        const result: SensorConfigRealtime[] = []\n        for (let i = 0; i < resp.data.length; i++) {\n            const row = resp.data[i]\n\n            result.push({\n                pressure: row.pressure_last_data.pressure,\n                pressure_connect: row.pressure_last_data.connect,\n                x: row.vibration_last_data.x,\n                x_acc: row.vibration_last_data.x_acc,\n                z: row.vibration_last_data.z,\n                z_acc: row.vibration_last_data.z_acc,\n                temp: row.vibration_last_data.temp,\n                vibration_connect: row.vibration_last_data.connect\n            })\n        }\n\n        return result\n    }\n}\n\nexport { SensorConfigService }","import { useState, useEffect, useContext } from \"react\"\nimport AppContext from \"../../context\"\nimport { FormSensorConfigEntity, SensorConfigEntity, SensorConfigRealtime } from '../../entities/SensorConfigEntity'\nimport styles from './SensorConfig.module.css'\nimport { FiLink } from 'react-icons/fi'\nimport { PiPlugsConnected } from 'react-icons/pi'\nimport { TbPlugConnected } from 'react-icons/tb'\nimport item1 from '../../assets/images/sensor_pressure.png'\nimport item2 from '../../assets/images/logo-sensor-vibration.png'\nimport { PopUpPilihEntity } from \"../../components/Popup/PopupPilihEntity\"\nimport PopupPilih from \"../../components/Popup/PopupPilih\"\nimport Popup from \"../../components/Popup/Popup\"\nimport { AlertEntity } from \"../../layouts/Alert/AlertEntity\"\nimport { SensorConfigService } from \"../../services/sensor_config\"\n\nimport { RxThickArrowLeft, RxThickArrowRight } from \"react-icons/rx\"\nimport { MachineService } from \"../../services/machine\"\nimport { MachineEntity } from \"../../entities/MachineEntity\"\n\nexport default function SensorConfig() {\n    // ========================================= GLOBAL CONTEXT =========================================  //\n    const context = useContext(AppContext)\n    const contextAccessToken = context.contextAccessToken\n    const contextShowAlertFunc = context.contextShowAlertFunc\n    const contextShowLoadingFunc = context.contextShowLoadingFunc\n    const stateShowLoading = context.stateShowLoading\n    // ========================================= GLOBAL CONTEXT =========================================  //\n    const [selectedMachine, setSelectedMachine] = useState<MachineEntity | null>(null)\n    const [selectedConfig, setSelectedConfig] = useState<SensorConfigEntity | null>(null)\n    const [formConfig, setFormConfig] = useState<FormSensorConfigEntity | null>(null)\n\n    const [showPopupPilih, setShowPopupPilih] = useState(false)\n    const [popUpPilihEntity, setPopUpPilihEntity] = useState<PopUpPilihEntity>()\n    const [dataRealtime, setDataRealtime] = useState<SensorConfigRealtime[]>([])\n\n    const pageList = ['Vibration', 'Pressure']\n    const [currentPageIndex, setCurrentPageIndex] = useState(0)\n    const currentPage = pageList[currentPageIndex]\n\n    const handleNextPage = () => {\n        if (currentPageIndex < pageList.length - 1) {\n            setCurrentPageIndex(prevIndex => prevIndex + 1)\n        }\n    }\n\n    const handlePrevPage = () => {\n        if (currentPageIndex > 0) {\n            setCurrentPageIndex(prevIndex => prevIndex - 1)\n        }\n    }\n\n    const handleSelectMachine = async () => {\n        contextShowLoadingFunc(true)\n        try {\n            const resp = await MachineService.GetAllMachine()\n            setPopUpPilihEntity(new PopUpPilihEntity({\n                popupTitle: 'Select Machine',\n                tableContent: resp,\n                onClick: async (row: MachineEntity) => { generateDataConfig(row) },\n                onClose: () => { setShowPopupPilih(false) }\n            }))\n            setShowPopupPilih(true)\n        } catch (error: any) {\n            contextShowAlertFunc(new AlertEntity({\n                message: error instanceof Error ? error.message : error.toString(),\n                level: 3\n            }))\n        } finally {\n            contextShowLoadingFunc(false)\n        }\n    }\n\n    const generateDataConfig = async (row: MachineEntity) => {\n        try {\n            const config = await SensorConfigService.GetSensorConfigByMachineID(row.machine_id)\n            setSelectedMachine(row)\n            setSelectedConfig(config)\n        } catch (error: any) {\n            contextShowAlertFunc(new AlertEntity({\n                message: error instanceof Error ? error.message : error.toString(),\n                level: 3\n            }))\n        }\n    }\n\n    const PopupInputData = (props: {\n        label: string\n        type_input: \"text\" | \"number\"\n        value: string | number\n        required: boolean\n        attribute: keyof FormSensorConfigEntity\n        onchange?: (event: React.ChangeEvent<HTMLInputElement>) => void\n    }) => {\n        const { label, value, required, attribute, onchange, type_input } = props\n\n        const numberInput: (keyof FormSensorConfigEntity)[] = [\n            'pressure_max_warn', 'pressure_max_alarm', 'x_warn', 'x_alarm', 'x_acc_warn', 'x_acc_alarm', 'z_warn',\n            'pressure_min_warn', 'pressure_min_alarm', 'z_alarm', 'z_acc_warn', 'z_acc_alarm', 'temp_warn', 'temp_alarm',\n        ]\n        const isNumberField = numberInput.includes(attribute)\n\n        return <>\n            <div>{label} {required && <span style={{ color: \"red\" }}>*</span>}</div>\n            <input type={type_input} style={{ marginBottom: \"0.5rem\", fontSize: \"1rem\", fontWeight: \"bolder\" }} value={value}\n                onChange={onchange ?? ((event) => {\n                    const newValue = isNumberField ? parseInt(event.target.value) : event.target.value\n\n                    setFormConfig((prev) => {\n                        return { ...prev, [attribute]: newValue, }\n                    })\n                })}\n            />\n        </>\n    }\n\n    const handleSaveChange = async () => {\n        contextShowLoadingFunc(true)\n        try {\n            if (!selectedMachine) {\n                throw new Error(\"No machine selected!\")\n            }\n            if (!formConfig) {\n                throw new Error(\"No updated data yet!\")\n            }\n\n            const resp = await SensorConfigService.AddSensorConfig(selectedMachine.machine_id, formConfig)\n            setFormConfig(null)\n            generateDataConfig(selectedMachine)\n\n            contextShowAlertFunc(new AlertEntity({ message: resp.message, level: 1 }))\n        } catch (error: any) {\n            contextShowAlertFunc(new AlertEntity({ message: error instanceof Error ? error.message : error.toString(), level: 3 }))\n        } finally {\n            contextShowLoadingFunc(false)\n        }\n    }\n\n    const generateDataRealtime = async () => {\n        if (selectedMachine == undefined) { return }\n        try {\n            const resp = await SensorConfigService.GetSensorConfigRealtime(selectedMachine.machine_id)\n            setDataRealtime(resp)\n        } catch (error: any) {\n            contextShowAlertFunc(new AlertEntity({\n                message: error instanceof Error ? error.message : error.toString(),\n                level: 3,\n            }))\n        }\n    }\n\n    const statusConnect = () => {\n        if (currentPage === 'Pressure') {\n            return dataRealtime[0]?.pressure_connect || false\n        } else {\n            return dataRealtime[0]?.vibration_connect === 128\n        }\n    }\n\n    useEffect(() => {\n        generateDataRealtime()\n        if (selectedMachine) {\n            const interval = setInterval(generateDataRealtime, 3000)\n            return () => { clearInterval(interval) }\n        }\n    }, [contextAccessToken, selectedMachine])\n\n    return (\n        <div className=\"container\">\n            <div className={styles.conWrapper}>\n                <div className={styles.conItem}>\n                    <div className={styles.conHeader}>\n                        Sensor Config\n                    </div>\n                    <div className={styles.conBody}>\n                        <div className={styles.bodyWrapper}>\n\n                            <div className={styles.bodyLeft}>\n                                <div className={styles.bodyLeftHeader}>\n                                    <div className={styles.headerItem}>\n                                        <span className={`${styles.headerDot} ${statusConnect() ? styles.headerConnect : styles.headerDisconnect}`}></span>\n                                        {statusConnect() ? 'Connected' : 'Not Connected'}\n                                    </div>\n                                </div>\n                                <div className={styles.bodyLeftBody}>\n                                    <div className={styles.bodyLeftBodyCard}>\n                                        <div className={styles.deviceImageWrapper}>\n                                            <img src={currentPage == 'Pressure' ? item1 : item2} alt=\"QM30VT2 Sensor\" className={styles.deviceImage} />\n                                        </div>\n\n                                        <div className={styles.deviceInfo}>\n                                            <div className={styles.label}>Device</div>\n                                            <input className={styles.input} type=\"text\" readOnly\n                                                value={selectedMachine?.machine ?? \"\"}\n                                                onClick={handleSelectMachine}\n                                            />\n\n                                            <div className={styles.label}>Detail Information</div>\n                                            <div className={styles.infoRow}>\n                                                <div className={styles.infoLabel}>\n                                                    <div>Link Up</div>\n                                                </div>\n                                                <div className={styles.infoValue}>\n                                                    <div>: {selectedMachine?.link_up ?? \"--\"}</div>\n                                                </div>\n                                            </div>\n                                            <div className={styles.infoRow}>\n                                                <div className={styles.infoLabel}>\n                                                    <div>Machine Type</div>\n                                                </div>\n                                                <div className={styles.infoValue}>\n                                                    <div>: {selectedMachine?.machine_type ?? \"--\"}</div>\n                                                </div>\n                                            </div>\n                                            <div className={styles.infoRow}>\n                                                <div className={styles.infoLabel}>\n                                                    <div>Gateway Host</div>\n                                                </div>\n                                                <div className={styles.infoValue}>\n                                                    <div>: {selectedMachine?.gateway_host ?? \"--\"}</div>\n                                                </div>\n                                            </div>\n                                            <div className={styles.infoRow}>\n                                                <div className={styles.infoLabel}>\n                                                    <div>Gateway Port</div>\n                                                </div>\n                                                <div className={styles.infoValue}>\n                                                    <div>: {selectedMachine?.gateway_port ?? \"--\"}</div>\n                                                </div>\n                                            </div>\n                                            <div className={styles.infoRow}>\n                                                <div className={styles.infoLabel}>\n                                                    <div>{currentPage == 'Pressure' ? 'Pressure Slave Id' : currentPage == 'Vibration' ? 'Vibration Slave Id' : 'Slave Id'}</div>\n                                                </div>\n                                                <div className={styles.infoValue}>\n                                                    <div>: {currentPage == 'Pressure' ? selectedMachine?.pressure_slave_id : selectedMachine?.vibration_slave_id ?? '--'}</div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* <div className={styles.bodyLeftFooter}>\n                                    <button className={styles.bodyLeftFooterButton}>\n                                        {statusConnect() ? <PiPlugsConnected size={20} /> : <TbPlugConnected size={20} />}\n                                        {statusConnect() ? \"Disconnect\" : \"Connect\"}\n                                    </button>\n                                </div> */}\n                            </div>\n\n                            <div className={styles.bodyRight}>\n                                <div className={styles.bodyRightForm}>\n                                    {selectedMachine\n                                        ? currentPage === 'Vibration'\n                                            ? <>\n                                                <div className={styles.formLeft}>\n                                                    <div className={styles.label}> X </div>\n                                                    <input className={styles.inputedit} type=\"text\" readOnly\n                                                        value={dataRealtime[0]?.x ?? \"\"}\n                                                    />\n                                                    {PopupInputData({\n                                                        label: \"X Warn\", value: formConfig?.x_warn ?? selectedConfig?.x_warn ?? '', type_input: 'number',\n                                                        attribute: \"x_warn\", required: true\n                                                    })}\n                                                    {PopupInputData({\n                                                        label: \"X Alarm\", value: formConfig?.x_alarm ?? selectedConfig?.x_alarm ?? '', type_input: 'number',\n                                                        attribute: \"x_alarm\", required: true\n                                                    })}\n                                                    <div className={styles.label}> X Acc</div>\n                                                    <input className={styles.inputedit} type=\"text\" readOnly\n                                                        value={dataRealtime[0]?.x_acc ?? \"\"}\n                                                    />\n                                                    {PopupInputData({\n                                                        label: \"X Acc Warn\", value: formConfig?.x_acc_warn ?? selectedConfig?.x_acc_warn ?? '', type_input: 'number',\n                                                        attribute: \"x_acc_warn\", required: true\n                                                    })}\n                                                </div>\n                                                <div className={styles.formMid}>\n                                                    {PopupInputData({\n                                                        label: \"X Acc Alarm\", value: formConfig?.x_acc_alarm ?? selectedConfig?.x_acc_alarm ?? '', type_input: 'number',\n                                                        attribute: \"x_acc_alarm\", required: true\n                                                    })}\n                                                    <div className={styles.label}> Z </div>\n                                                    <input className={styles.inputedit} type=\"text\" readOnly\n                                                        value={dataRealtime[0]?.z ?? \"\"}\n                                                    />\n                                                    {PopupInputData({\n                                                        label: \"Z Warn\", value: formConfig?.z_warn ?? selectedConfig?.z_warn ?? '', type_input: 'number',\n                                                        attribute: \"z_warn\", required: true\n                                                    })}\n                                                    {PopupInputData({\n                                                        label: \"Z Alarm\", value: formConfig?.z_alarm ?? selectedConfig?.z_alarm ?? '', type_input: 'number',\n                                                        attribute: \"z_alarm\", required: true\n                                                    })}\n                                                    <div className={styles.label}> Z Acc</div>\n                                                    <input className={styles.inputedit} type=\"text\" readOnly\n                                                        value={dataRealtime[0]?.z_acc ?? \"\"}\n                                                    />\n                                                </div>\n                                                <div className={styles.formRight}>\n                                                    {PopupInputData({\n                                                        label: \"Z Acc Warn\", value: formConfig?.z_acc_warn ?? selectedConfig?.z_acc_warn ?? '', type_input: 'number',\n                                                        attribute: \"z_acc_warn\", required: true\n                                                    })}\n                                                    {PopupInputData({\n                                                        label: \"Z Acc Alarm\", value: formConfig?.z_acc_alarm ?? selectedConfig?.z_acc_alarm ?? '', type_input: 'number',\n                                                        attribute: \"z_acc_alarm\", required: true\n                                                    })}\n                                                    <div className={styles.label}> Temp </div>\n                                                    <input className={styles.inputedit} type=\"text\" readOnly\n                                                        value={dataRealtime[0]?.temp ?? \"\"}\n                                                    />\n                                                    {PopupInputData({\n                                                        label: \"Temp Warn\", value: formConfig?.temp_warn ?? selectedConfig?.temp_warn ?? '', type_input: 'number',\n                                                        attribute: \"temp_warn\", required: true\n                                                    })}\n                                                    {PopupInputData({\n                                                        label: \"Temp Alarm\", value: formConfig?.temp_alarm ?? selectedConfig?.temp_alarm ?? '', type_input: 'number',\n                                                        attribute: \"temp_alarm\", required: true\n                                                    })}\n                                                </div>\n                                            </>\n                                            : <>\n                                                <div className={styles.formLeft}>\n                                                    <div className={styles.label}> Pressure Data </div>\n                                                    <input className={styles.inputedit} type=\"text\" readOnly\n                                                        value={dataRealtime[0]?.pressure ?? \"\"}\n                                                    />\n                                                    {PopupInputData({\n                                                        label: \"Pressure Max Warn\", value: formConfig?.pressure_max_warn ?? selectedConfig?.pressure_max_warn ?? '', type_input: 'number',\n                                                        attribute: \"pressure_max_warn\", required: true\n                                                    })}\n                                                    {PopupInputData({\n                                                        label: \"Pressure Max Alarm\", value: formConfig?.pressure_max_alarm ?? selectedConfig?.pressure_max_alarm ?? '', type_input: 'number',\n                                                        attribute: \"pressure_max_alarm\", required: true\n                                                    })}\n                                                </div>\n                                                <div className={styles.formRight}>\n                                                    {PopupInputData({\n                                                        label: \"Pressure Min Warn\", value: formConfig?.pressure_min_warn ?? selectedConfig?.pressure_min_warn ?? '', type_input: 'number',\n                                                        attribute: \"pressure_min_warn\", required: true\n                                                    })}\n                                                    {PopupInputData({\n                                                        label: \"Pressure Min Alarm\", value: formConfig?.pressure_min_alarm ?? selectedConfig?.pressure_min_alarm ?? '', type_input: 'number',\n                                                        attribute: \"pressure_min_alarm\", required: true\n                                                    })}\n                                                </div>\n                                            </>\n                                        : <></>\n                                    }\n                                </div>\n                                <div className={styles.bodyRightButton}>\n                                    <button\n                                        className={`${styles.pageButton} ${currentPageIndex === 0 ? styles.active : ''}`}\n                                        onClick={handlePrevPage}\n                                    >\n                                        <RxThickArrowLeft />\n                                        <span className={styles.tooltipText}>Previous</span>\n                                    </button>\n                                    <div className={styles.pageIndicatorWrapper}>\n                                        <span className={styles.pageIndicator}>\n                                            {currentPage}\n                                        </span>\n                                    </div>\n                                    <button\n                                        className={`${styles.pageButton} ${currentPageIndex === pageList.length - 1 ? styles.active : ''}`}\n                                        onClick={handleNextPage}\n                                    >\n                                        <RxThickArrowRight />\n                                        <span className={styles.tooltipText}>Next</span>\n                                    </button>\n                                </div>\n                                <div className={styles.bodyRightStatus}>\n                                    <div className={styles.bodyRightStatusLeft}>\n                                        <div className={styles.paramItem}>\n                                            <span className={`${styles.statusDot} ${styles.statusRead}`}></span>\n                                            Editable Parameters\n                                        </div>\n                                        <div className={styles.paramItem}>\n                                            <span className={`${styles.statusDot} ${styles.statusEditable}`}></span>\n                                            Read-Only Parameters\n                                        </div>\n                                    </div>\n                                    <div className={styles.bodyRightStatusRight}>\n                                        <button className={styles.saveButton} onClick={handleSaveChange}>\n                                            Save Change\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            {popUpPilihEntity != null\n                ? <PopupPilih\n                    showPopup={showPopupPilih}\n                    setShowPopup={setShowPopupPilih}\n                    popUpPilihEntity={popUpPilihEntity}\n                />\n                : <></>}\n        </div>\n    )\n}","import { BASE_URL } from \"../constants\"\nimport { MachineEntity } from \"../entities/MachineEntity\"\nimport FetchUtils from \"../utils/fetch\"\n\nclass MachineService {\n    static async GetAllMachine(link_up_id?: string): Promise<MachineEntity[]> {\n        let uri = `${BASE_URL}/api/v1/machine`\n        if (link_up_id != null){\n            uri += `?link_up_id=${link_up_id}`\n        }\n\n        const resp = await FetchUtils.fetchAuth(uri)\n        if (resp.status !== 200) {\n            throw new Error(resp.message)\n        }\n\n        const rawData = Array.isArray(resp.data) ? resp.data : []\n        const data: MachineEntity[] = []\n        for (let i = 0; i < rawData.length; i++) {\n            data.push({\n                machine_id: rawData[i].machine_id,\n                machine: rawData[i].machine,\n                machine_warn: rawData[i].machine_warn,\n                machine_alarm: rawData[i].machine_alarm,\n                link_up: rawData[i].link_up,\n                machine_type: rawData[i].machine_type,\n                gateway_host: rawData[i].gateway_host,\n                gateway_port: rawData[i].gateway_port,\n                pressure_slave_id: rawData[i].pressure_slave_id,\n                vibration_slave_id: rawData[i].vibration_slave_id,\n            })\n        }\n\n        return data\n    }\n\n    static async AddMachine(data: {\n        machine: string,\n        machine_warn: number,\n        machine_alarm: number,\n        link_up_id: number,\n        machine_type: string,\n        gateway_host: string,\n        gateway_port: string,\n        pressure_slave_id?: number,\n        vibration_slave_id?: number,\n    }): Promise<{ message: string }> {\n        let resp = await FetchUtils.fetchAuth(`${BASE_URL}/api/v1/machine`,\n            {\n                method: 'POST',\n                body: JSON.stringify({ ...data }),\n                headers: { \"Content-Type\": \"application/json\" }\n            }\n        )\n\n        if (resp.status !== 200) {\n            throw new Error(resp.message)\n        }\n\n        return resp\n    }\n\n    static async UpdateMachine(machine_id: number, fields: {\n        machine?: string,\n        machine_warn?: number,\n        machine_alarm?: number,\n        link_up_id?: number,\n        machine_type?: string,\n        gateway_host?: string,\n        gateway_port?: string,\n        pressure_slave_id?: number,\n        vibration_slave_id?: number,\n    }): Promise<{ message: string }> {\n        let resp = await FetchUtils.fetchAuth(`${BASE_URL}/api/v1/machine`,\n            {\n                method: 'PATCH',\n                body: JSON.stringify({ machine_id, fields }),\n                headers: { \"Content-Type\": \"application/json\" }\n            }\n        )\n\n        if (resp.status !== 200) {\n            throw new Error(resp.message)\n        }\n\n        return resp\n    }\n\n    static async DeleteMachine(machine_id: number): Promise<{ message: string }> {\n        let resp = await FetchUtils.fetchAuth(`${BASE_URL}/api/v1/machine`,\n            {\n                method: 'DELETE',\n                body: JSON.stringify({ machine_id: machine_id }),\n                headers: { \"Content-Type\": \"application/json\" }\n            }\n        )\n\n        if (resp.status !== 200) {\n            throw new Error(resp.message)\n        }\n\n        return resp\n    }\n}\n\nexport { MachineService }","class PopUpPilihEntity {\n  popupTitle: string\n  tableContent: Array<any>\n  onClick: ((row: any) => void)\n  onClose: (() => void)\n\n  constructor(object: { popupTitle: string, tableContent: Array<any>, onClick: ((row: any) => void), onClose: (() => void) }) {\n    this.popupTitle = object.popupTitle\n    this.tableContent = object.tableContent\n    this.onClick = object.onClick\n    this.onClose = object.onClose\n  }\n}\n\nexport { PopUpPilihEntity }\n","class FilterUtils {\n    static FilterTable = (row: any, tableDataFilter: { [key: string]: string }) => {\n        let keys = Object.keys(row)\n        for (let indexKey = 0; indexKey < keys.length; indexKey++) {\n            const key = keys[indexKey]\n            if (tableDataFilter[key]) {\n                if (row != undefined && row[key] != null) {\n                    if (tableDataFilter[key] !== \"\") {\n                        if (\n                            row[key]\n                                .toString()\n                                .toLowerCase()\n                                .includes(tableDataFilter[key].toString().toLowerCase()) == false\n                        ) {\n                            return false\n                        }\n                    }\n                } else {\n                    return false\n                }\n            }\n        }\n        return true\n    }\n\n    static SortingTable = (a: any, b: any, sortChoosed: string) => {\n        if (sortChoosed != null && sortChoosed != undefined) {\n            if (a[sortChoosed] !== undefined && b[sortChoosed] !== undefined) {\n                if (typeof a[sortChoosed] === 'string' && typeof b[sortChoosed] === 'string') {\n                    return a[sortChoosed].localeCompare(b[sortChoosed])\n                } else if (typeof a[sortChoosed] === 'number' && typeof b[sortChoosed] === 'number') {\n                    return a[sortChoosed] - b[sortChoosed]\n                }\n            }\n        }\n        return 0\n    }\n\n    static FastIsEmpty = (arr: any[]) => {\n        for (const _ in arr) {\n            return false\n        }\n        return true\n    }\n}\n\nexport default FilterUtils","import { useEffect, useState } from \"react\"\nimport Backdrop from \"../../layouts/Backdrop/Backdrop\"\nimport popup from \"./Popup.module.css\"\nimport { PopUpPilihEntity } from \"./PopupPilihEntity\"\nimport FilterUtils from \"../../utils/filter-utils\"\n\nexport default function PopupPilih(props: { showPopup: boolean, setShowPopup: ((val: boolean) => void), popUpPilihEntity: PopUpPilihEntity }) {\n    const { showPopup, setShowPopup, popUpPilihEntity } = props\n\n    const popupTitle = popUpPilihEntity.popupTitle\n    const tableContent = popUpPilihEntity.tableContent\n    const onClick = popUpPilihEntity.onClick\n    const onClose = popUpPilihEntity.onClose\n\n    const [tableDataFilter, setTableDataFilter] = useState<{ [key: string]: string }>({})\n\n    const click = (row: any) => {\n        setShowPopup(false)\n        setTableDataFilter({})\n        onClick(row)\n    }\n\n    const close = () => {\n        setShowPopup(false)\n        setTableDataFilter({})\n        onClose()\n    }\n\n    useEffect(() => {\n        if (tableContent === null || tableContent.length === 0) return\n\n        let start: { [key: string]: string } = {}\n        const keys = Object.keys(tableContent[0])\n        for (let i = 0; i < keys.length; i++) {\n            start[keys[i]] = ''\n        }\n\n        setTableDataFilter(start)\n    }, [tableContent])\n\n    return (\n        <>\n            {showPopup && <Backdrop close={() => close()} />}\n            <div className={popup.modalmobile} id={showPopup ? null : popup.hide} style={{ maxWidth: '1200px' }}>\n                <div>\n                    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", borderBottom: \"1px solid silver\" }}>\n                        {popupTitle != null\n                            ? <h2 style={{ textTransform: 'uppercase', }}>{popupTitle.replace(\"_\", \" \")}</h2>\n                            : <h2> &nbsp;</h2>\n                        }\n                        <h2 onClick={() => close()}>X</h2>\n                    </div>\n                </div>\n                <div>\n                    {tableContent.length === 0\n                        ? <table><thead><tr><th>no data available yet!</th></tr></thead></table>\n                        : <div style={{ maxHeight: \"70vh\", overflow: \"auto\", paddingBottom: '1rem' }}>\n                            <table className=\"tablepopup\">\n                                <thead>\n                                    <tr>\n                                        {Object.keys(tableContent[0]).map((key) => {\n                                            return <th key={`filter-${key}`}>\n                                                <label style={{ fontSize: \"12px\", textTransform: 'uppercase', fontWeight: '600', color: \"white\" }}>{key.replace('_', ' ')} :</label>\n                                            </th>\n                                        })}\n                                    </tr>\n                                    <tr>\n                                        {Object.keys(tableContent[0]).map((key) => {\n                                            return <th key={`filter-${key}`}>\n                                                <input\n                                                    type=\"text\"\n                                                    id={`${key}`}\n                                                    name={key}\n                                                    value={tableDataFilter[key]}\n                                                    onChange={(event) => setTableDataFilter(prevState => ({\n                                                        ...prevState,\n                                                        [event.target.name]: event.target.value\n                                                    }))}\n                                                />\n                                            </th>\n                                        })}\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {tableContent.filter((row) => {\n                                        return FilterUtils.FilterTable(row, tableDataFilter)\n                                    }).map((row, index) => {\n                                        return <tr key={`rowSelectTable-${index}`} onClick={() => click(row)}>\n                                            {Object.keys(row).map((key) => {\n                                                return <td key={`${index}-key${key}`}>{row[key]}</td>\n                                            })}\n                                        </tr>\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n"],"names":["SensorConfigService","GetSensorConfigByMachineID","machine_id","resp","FetchUtils","fetchAuth","BASE_URL","status","Error","message","data","pressure_max_warn","pressure_max_alarm","pressure_min_warn","pressure_min_alarm","x_warn","x_alarm","x_acc_warn","x_acc_alarm","z_warn","z_alarm","z_acc_warn","z_acc_alarm","temp_warn","temp_alarm","AddSensorConfig","fields","method","body","JSON","stringify","headers","GetSensorConfigRealtime","encodeURIComponent","result","i","length","row","push","pressure","pressure_last_data","pressure_connect","connect","x","vibration_last_data","x_acc","z","z_acc","temp","vibration_connect","SensorConfig","_selectedMachine$mach","_selectedMachine$link","_selectedMachine$mach2","_selectedMachine$gate","_selectedMachine$gate2","_selectedMachine$vibr","_dataRealtime$0$x","_dataRealtime$3","_ref","_formConfig$x_warn","_ref2","_formConfig$x_alarm","_dataRealtime$0$x_acc","_dataRealtime$4","_ref3","_formConfig$x_acc_war","_ref4","_formConfig$x_acc_ala","_dataRealtime$0$z","_dataRealtime$5","_ref5","_formConfig$z_warn","_ref6","_formConfig$z_alarm","_dataRealtime$0$z_acc","_dataRealtime$6","_ref7","_formConfig$z_acc_war","_ref8","_formConfig$z_acc_ala","_dataRealtime$0$temp","_dataRealtime$7","_ref9","_formConfig$temp_warn","_ref0","_formConfig$temp_alar","_dataRealtime$0$press","_dataRealtime$8","_ref1","_formConfig$pressure_","_ref10","_formConfig$pressure_2","_ref11","_formConfig$pressure_3","_ref12","_formConfig$pressure_4","context","useContext","AppContext","contextAccessToken","contextShowAlertFunc","contextShowLoadingFunc","selectedMachine","setSelectedMachine","stateShowLoading","useState","selectedConfig","setSelectedConfig","formConfig","setFormConfig","showPopupPilih","setShowPopupPilih","popUpPilihEntity","setPopUpPilihEntity","dataRealtime","setDataRealtime","pageList","currentPageIndex","setCurrentPageIndex","currentPage","generateDataConfig","async","config","error","AlertEntity","toString","level","PopupInputData","props","label","value","required","attribute","onchange","type_input","isNumberField","includes","_jsxs","_Fragment","children","_jsx","style","color","type","marginBottom","fontSize","fontWeight","onChange","event","newValue","parseInt","target","prev","generateDataRealtime","undefined","statusConnect","_dataRealtime$","_dataRealtime$2","useEffect","interval","setInterval","clearInterval","className","styles","conWrapper","conItem","conHeader","conBody","bodyWrapper","bodyLeft","bodyLeftHeader","headerItem","headerDot","headerConnect","headerDisconnect","bodyLeftBody","bodyLeftBodyCard","deviceImageWrapper","src","item1","item2","alt","deviceImage","deviceInfo","input","readOnly","machine","onClick","MachineService","GetAllMachine","PopUpPilihEntity","popupTitle","tableContent","onClose","infoRow","infoLabel","infoValue","link_up","machine_type","gateway_host","gateway_port","pressure_slave_id","vibration_slave_id","bodyRight","bodyRightForm","formLeft","inputedit","formMid","formRight","bodyRightButton","pageButton","active","handlePrevPage","prevIndex","RxThickArrowLeft","tooltipText","pageIndicatorWrapper","pageIndicator","handleNextPage","RxThickArrowRight","bodyRightStatus","bodyRightStatusLeft","paramItem","statusDot","statusRead","statusEditable","bodyRightStatusRight","saveButton","PopupPilih","showPopup","setShowPopup","link_up_id","uri","rawData","Array","isArray","machine_warn","machine_alarm","AddMachine","UpdateMachine","DeleteMachine","constructor","object","this","FilterUtils","FilterTable","tableDataFilter","keys","Object","indexKey","key","toLowerCase","SortingTable","a","b","sortChoosed","localeCompare","FastIsEmpty","arr","_","setTableDataFilter","close","start","Backdrop","popup","modalmobile","id","hide","maxWidth","display","flexDirection","justifyContent","borderBottom","textTransform","replace","maxHeight","overflow","paddingBottom","map","name","prevState","filter","index","click"],"sourceRoot":""}