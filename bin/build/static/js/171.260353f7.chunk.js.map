{"version":3,"file":"static/js/171.260353f7.chunk.js","mappings":"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","sources":["webpack://nagamas_frontend/./src/layouts/ChangePass/ChangePass.module.css?71ec","layouts/ChangePass/ChangePass.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ChangePass_container__Ur7ie\",\"background\":\"ChangePass_background__W-OgR\",\"formPass\":\"ChangePass_formPass__NCJIW\",\"warn\":\"ChangePass_warn__6kUMw\",\"warnOff\":\"ChangePass_warnOff__TGZR0\",\"buttons\":\"ChangePass_buttons__BKPIO\"};","import change from \"./ChangePass.module.css\"\nimport { useState, useEffect, useRef, useContext } from \"react\"\nimport AppContext from \"../../context\"\nimport Backdrop from \"../Backdrop/Backdrop\"\nimport { AlertEntity } from \"../Alert/AlertEntity\"\nimport { AuthService } from \"../../services/auth\"\nimport { IoCloseCircleSharp } from \"react-icons/io5\"\nimport { IoIosCheckmarkCircle } from \"react-icons/io\"\n\nexport default function ChangePass(props: { showChangePass: boolean; setShowChangePass: (val: boolean) => void }) {\n    const { showChangePass, setShowChangePass } = props\n    const context = useContext(AppContext)\n    const contextShowLoadingFunc = context.contextShowLoadingFunc\n    const contextShowAlertFunc = context.contextShowAlertFunc\n    const userRef = useRef<HTMLInputElement | null>(null)\n\n    const [currPwd, setCurrPwd] = useState(\"\")\n    const [validCurrPwd, setValidCurrPwd] = useState(false)\n    const [currPwdFocus, setCurrPwdFocus] = useState(false)\n\n    const [pwd, setPwd] = useState(\"\")\n    const [validPwd, setValidPwd] = useState(false)\n    const [validPwdCheckUppercase, setValidPwdCheckUppercase] = useState(false)\n    const [validPwdCheckLowercase, setValidPwdCheckLowercase] = useState(false)\n    const [validPwdCheckNumber, setValidPwdCheckNumber] = useState(false)\n    const [validPwdCheckSpecial, setValidPwdCheckSpecial] = useState(false)\n    const [validPwdCheckLength, setValidPwdCheckLength] = useState(false)\n    const [pwdFocus, setPwdFocus] = useState(false)\n\n    const [match, setMatch] = useState(\"\")\n    const [validMatch, setValidMatch] = useState(false)\n\n    useEffect(() => {\n        if (userRef != null && userRef.current != null) {\n            userRef.current.focus()\n        }\n    }, [])\n\n    useEffect(() => {\n        const PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%*/]).{8,24}$/\n        const PWD_REGEX_UPPERCASE = /^(?=.*[A-Z])/\n        const PWD_REGEX_LOWERCASE = /^(?=.*[a-z])/\n        const PWD_REGEX_NUMBER = /^(?=.*[0-9])/\n        const PWD_REGEX_SPECIAL = /^(?=.*[!@#$%*/])/\n        const PWD_REGEX_LENGTH = /^.{8,24}/\n\n        setValidPwdCheckUppercase(PWD_REGEX_UPPERCASE.test(pwd))\n        setValidPwdCheckLowercase(PWD_REGEX_LOWERCASE.test(pwd))\n        setValidPwdCheckNumber(PWD_REGEX_NUMBER.test(pwd))\n        setValidPwdCheckSpecial(PWD_REGEX_SPECIAL.test(pwd))\n        setValidPwdCheckLength(PWD_REGEX_LENGTH.test(pwd))\n        setValidPwd(PWD_REGEX.test(pwd))\n        setValidMatch(pwd === match)\n    }, [pwd, match])\n\n    async function updatePassword() {\n        if (!validMatch || !validPwd) {\n            return contextShowAlertFunc(new AlertEntity({ message: \"New Password Must Match & Valid\", level: 3 }))\n        }\n        contextShowLoadingFunc(true)\n        try {\n            let resp = await AuthService.changePass(currPwd, pwd)\n            setPwd(\"\")\n            setCurrPwd(\"\")\n            setMatch(\"\")\n            contextShowLoadingFunc(false)\n            setShowChangePass(false)\n            return contextShowAlertFunc(new AlertEntity({ message: resp.message, level: 1 }))\n        } catch (error: any) {\n            contextShowLoadingFunc(false)\n            return contextShowAlertFunc(new AlertEntity({ message: error.message, level: 3 }))\n        }\n    }\n    async function handleCurrPassword(e: { target: { value: any } }) {\n        let password = e.target.value\n        setCurrPwd(password)\n        setValidCurrPwd(true)\n    }\n    return (\n        <>\n            {showChangePass && <Backdrop close={() => setShowChangePass(false)} />}\n            {showChangePass && (\n                <div className={change.container}>\n                    <div className={change.background}>\n                        <div className={change.formPass}>\n                            <h2>Change Password</h2>\n                            <label>Current Password</label>\n                            <input\n                                ref={userRef}\n                                type={\"password\"}\n                                required\n                                onChange={handleCurrPassword}\n                                value={currPwd}\n                                onFocus={() => setCurrPwdFocus(true)}\n                                onBlur={() => setCurrPwdFocus(false)}\n                            />\n                            {currPwd == \"\" &&\n                                <div className={change.warn} >\n                                    <p style={{ fontSize: \"12px\" }}>\n                                        <span>Need Current Password:</span> Please Enter Current\n                                        Password.\n                                    </p>\n                                </div>\n                            }\n                            <div\n                                className={\n                                    currPwd && !validCurrPwd\n                                        ? `${change.warn}`\n                                        : `${change.warnOff}`\n                                }\n                            >\n                                <p>\n                                    <span>Wrong Password:</span> Enter the correct password.\n                                </p>\n                            </div>\n\n                            <label>New Password</label>\n                            <input\n                                ref={userRef}\n                                type={\"password\"}\n                                required\n                                onChange={(e) => setPwd(e.target.value)}\n                                value={pwd}\n                                onFocus={() => setPwdFocus(true)}\n                                onBlur={() => setPwdFocus(false)}\n                            />\n\n                            <label>Confirm New Password</label>\n                            <div style={{ display: \"flex\", flexDirection: \"row\", width: \"100%\" }}>\n                                <input\n                                    ref={userRef} type={\"password\"} style={{ flex: \"98%\" }}\n                                    required onChange={(e) => setMatch(e.target.value)}\n                                    value={match}\n                                />\n                                <div style={{ flex: \"2%\" }}>\n                                    {validMatch == true && match != \"\" ? <span style={{ color: \"green\", visibility: \"visible\" }}> <IoIosCheckmarkCircle /> </span> : <span style={{ color: \"red\", visibility: \"visible\" }}> <IoCloseCircleSharp /> </span>}\n                                </div>\n                            </div>\n                            <div style={{ textAlign: \"start\", fontSize: \"12px\" }}>\n                                <div style={{ fontWeight: \"600\", fontSize: \"14px\" }}>New Password Must :</div>\n                                <div>\n                                    {validPwdCheckUppercase == true ? <span style={{ color: \"green\", visibility: \"visible\" }}> <IoIosCheckmarkCircle /> </span> : <span style={{ color: \"red\", visibility: \"visible\" }}> <IoCloseCircleSharp /> </span>}\n                                    Use Uppercase\n                                </div>\n                                <div>\n                                    {validPwdCheckLowercase == true ? <span style={{ color: \"green\", visibility: \"visible\" }}> <IoIosCheckmarkCircle /> </span> : <span style={{ color: \"red\", visibility: \"visible\" }}> <IoCloseCircleSharp /> </span>}\n                                    Use Lowercase\n                                </div>\n                                <div>\n                                    {validPwdCheckNumber == true ? <span style={{ color: \"green\", visibility: \"visible\" }}> <IoIosCheckmarkCircle /> </span> : <span style={{ color: \"red\", visibility: \"visible\" }}> <IoCloseCircleSharp /> </span>}\n                                    Use Number\n                                </div>\n                                <div>\n                                    {validPwdCheckSpecial == true ? <span style={{ color: \"green\", visibility: \"visible\" }}> <IoIosCheckmarkCircle /> </span> : <span style={{ color: \"red\", visibility: \"visible\" }}> <IoCloseCircleSharp /> </span>}\n                                    Use Special Character \"!@#$%*/\"\n                                </div>\n                                <div>\n                                    {validPwdCheckLength == true ? <span style={{ color: \"green\", visibility: \"visible\" }}> <IoIosCheckmarkCircle /> </span> : <span style={{ color: \"red\", visibility: \"visible\" }}> <IoCloseCircleSharp /> </span>}\n                                    More Than 8 Character\n                                </div>\n                            </div>\n\n                            <div className={change.buttons}>\n                                <button\n                                    className=\"tertiaryButton\"\n                                    onClick={() => setShowChangePass(false)}\n                                >\n                                    Cancel\n                                </button>\n                                <button className=\"primaryButton\" onClick={updatePassword}>\n                                    Change\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n"],"names":["ChangePass","props","showChangePass","setShowChangePass","context","useContext","AppContext","contextShowLoadingFunc","contextShowAlertFunc","userRef","useRef","currPwd","setCurrPwd","useState","validCurrPwd","setValidCurrPwd","currPwdFocus","setCurrPwdFocus","pwd","setPwd","validPwd","setValidPwd","validPwdCheckUppercase","setValidPwdCheckUppercase","validPwdCheckLowercase","setValidPwdCheckLowercase","validPwdCheckNumber","setValidPwdCheckNumber","validPwdCheckSpecial","setValidPwdCheckSpecial","validPwdCheckLength","setValidPwdCheckLength","pwdFocus","setPwdFocus","match","setMatch","validMatch","setValidMatch","useEffect","current","focus","test","_jsxs","_Fragment","children","_jsx","Backdrop","close","className","change","container","background","formPass","ref","type","required","onChange","async","e","password","target","value","onFocus","onBlur","warn","style","fontSize","warnOff","display","flexDirection","width","flex","color","visibility","IoIosCheckmarkCircle","IoCloseCircleSharp","textAlign","fontWeight","buttons","onClick","AlertEntity","message","level","resp","AuthService","changePass","error"],"sourceRoot":""}